upstream authentication {
   server localhost:5000;
}

upstream accounting {
   server localhost:5001;
}

upstream support {
    server localhost:5002;
}

upstream qa {
    server localhost:5003;
}

upstream file {
    server localhost:5004;
}

upstream survey {
    server localhost:5005;
}

server {
    listen 443 ssl;
    server_name example.com;
    root /var/www/html;
    index index.html;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Proto https;
    proxy_headers_hash_bucket_size 512;
    proxy_redirect off;

    ssl_certificate certificates/certificate.pem;
    ssl_certificate_key certificates/key.pem;
    ssl_trusted_certificate certificates/certificate.pem;

    ssl_session_cache shared:SSL:60m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    ssl_prefer_server_ciphers on;

    # Websockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_read_timeout 900s;
    proxy_connect_timeout 900s;
    proxy_send_timeout 900s;
    send_timeout 900s;
    client_max_body_size 100M;

    location / {
        try_files $uri $uri/ /index.html =404;
    }

    location /authentication-api {
        proxy_pass http://authentication;
    }

    location /socket.io/support {
        proxy_pass http://support;
    }

    location /socket.io/file {
       proxy_pass http://file;
    }

    location /socket.io/qa {
        proxy_pass http://qa;
    }

    location /socket.io/accounting {
        proxy_pass http://accounting;
    }

    location /socket.io/survey {
        proxy_pass http://survey;
    }

}

server {
        listen 80;
        server_name example.com;
        if ($host = alocom.co) {
                return 301 https://$host$request_uri;
        }
}
